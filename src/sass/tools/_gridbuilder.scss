

// - Grid Builder

$gutter-compensation: $gutter-width * .5 * -1;
$half-gutter-width: $gutter-width * .5;

// - Floated Grid

@mixin generate_grid($type, $gutter) {
	%col-#{$type}-base {
		float: left;
		padding-left: $half-gutter-width;
		padding-right: $half-gutter-width;
	}

	@for $i from 1 through $grid-columns {
		.col-#{$type}-#{$i} {
			@extend %grid-#{$type}--base;
			width: (100% / 12) * $i;
		}
	}
}


// - Flexbox Grid

@mixin flexboxgrid {
	
	.grid-wrap {
		@include wrap($grid-max-width);
	}
	
	.container-fluid,
	.container {
		margin-right: auto;
		margin-left: auto;
	}

	.container-fluid {
		padding-right: 2rem;
		padding-left: 2rem;
	}
	
	.row {
		box-sizing: border-box;
		display: flex;
		-webkit-box-flex: 0;
		flex: 0 1 auto;
		flex-direction: row;
		flex-wrap: wrap;
		margin-right: $gutter-compensation;
		margin-left: $gutter-compensation; 
	}
	
	.row.reverse { flex-direction: row-reverse; }
	
	.col.reverse { flex-direction: column-reverse; }
		
	[class*="col-#{$grid-base-name}"] {
		flex-grow: 0;
		flex-shrink: 0;
		padding-right: $half-gutter-width;
		padding-left: $half-gutter-width;
		flex-basis: auto;
	}
	
	@for $i from 1 through $grid-columns {
		.col-#{$grid-base-name}-#{$i} {
			flex-basis: 100% / $grid-columns * $i;
			max-width: 100% / $grid-columns * $i;
		}
	}
	
	.col-#{$grid-base-name} {
		flex-grow: 1;
		flex-basis: 0;
		max-width:  100%;
	}
	
	@for $i from 0 through $grid-columns - 1 {
		.col-#{$grid-base-name}-offset-#{$i} {
			@if $i == 0 {
				margin-left: 0;
			} @else {
				margin-left: 100% / $grid-columns * $i;
			}
		}
	}
	
	.start-#{$grid-base-name} {
		justify-content: flex-start;
		text-align: left;
	}
	
	.center-#{$grid-base-name} {
		justify-content: center;
		text-align: center;
	}
	
	.end-#{$grid-base-name} {
		justify-content: flex-end;
		text-align: right;
	}
	
	.top-#{$grid-base-name} { align-items: flex-start; }
	
	.middle-#{$grid-base-name} { align-items: center; }
	
	.bottom-#{$grid-base-name} { align-items: flex-end; }
	
	.around-#{$grid-base-name} { justify-content: space-around; }
	
	.between-#{$grid-base-name} { justify-content: space-between; }
	
	.first-#{$grid-base-name} { order: -1; }
	
	.last-#{$grid-base-name} { order: 1; }
	
	@each $breakpoint in $grid-breakpoints {
		$name: nth($breakpoint, 1);
		$size: nth($breakpoint, 2);
		$container: nth($breakpoint, 3);
		@media only screen and (min-width: $size) {
			
			.container { width: $container; }
		  
			[class*="col-#{$name}"] {
				flex-grow: 0;
				flex-shrink: 0;
				padding-right: $half-gutter-width;
				padding-left: $half-gutter-width;
				flex-basis: auto;
			}
			
			@for $i from 1 through $grid-columns {
				.col-#{$name}-#{$i} {
					flex-basis: 100% / $grid-columns * $i;
					max-width: 100% / $grid-columns * $i;
				}
			}
			@for $i from 0 through $grid-columns - 1 {
				.col-#{$name}-offset-#{$i} {
					@if $i == 0 {
						margin-left: 0;
					} @else {
						margin-left: 100% / $grid-columns * $i;
					}
				}
			}
		  
			.col-#{$name} {
				flex-grow: 1;
				flex-basis: 0;
				max-width: 100%;
			}
			.start-#{$name} {
				justify-content: flex-start;
				text-align: left;
			}
			
			.center-#{$name} {
				justify-content: center;
				text-align: center;
			}
			
			.end-#{$name} {
				justify-content:flex-end;
				text-align: right;
			}
			
			.top-#{$name} { align-items: flex-start; }
			
			.middle-#{$name} { align-items: center; }
			
			.bottom-#{$name} { align-items: flex-end; }
			
			.around-#{$name} { justify-content: space-around; }
			
			.between-#{$name} { justify-content: space-between; }
			
			.first-#{$name} { order: -1; }
			
			.last-#{$name} { order: 1; }
		}
	}
}
